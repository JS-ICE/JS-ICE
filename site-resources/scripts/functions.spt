// functions for JS-ICE
// gets and returns the symmetry operation names (e.g. "identity") 
function readSymmetryNames() {
	var allSymopInfo = getProperty("spacegroupInfo.operations");
	var numSymops = allSymopInfo.length;
	var symopNameArray = [];
	for (var i = 1; i< numSymops+1;i++){
		var symopCurrent = allSymopInfo[i];
		var currentName = symopCurrent[3];
		symopNameArray[i] = currentName;
	}
	return @symopNameArray
}
// gets and returns the symmetry operation vector names 
function readSymmetryVectors() {
	var allSymopInfo = getProperty("spacegroupInfo.operations");
	var numSymops = allSymopInfo.length;
	var symopVectorArray = [];
	for (var i = 1; i< numSymops+1;i++){
		var symopCurrent = allSymopInfo[i];
		var currentName = symopCurrent[2];
		symopNameArray[i] = currentName;
	}
	return @symopVectorArray
}
// draws the axis lines for rotation axes and mirror planes for mirror symops  

// returns the points given after performing a symmetry operation a chosen number of times (one point per operation
function getSymmetricAtomArray(symopSelected,point,iterations){
	var symAtomArray = [];
	for (var i = 1; i<= iterations;i++) {
		if (i=1){
			var output = all.symop(symopSelected,point)
			symAtomArray[i] = output; 
			}
		else {
			var output = all.symop(symopSelected[i-1],point)
			symAtomArray[i] = output;
		}	

	}
	return symAtomArray 
}
// adds new element by appending an element and then deleting the newly-created bond
// needs significant work such that elements that should be strings are strings and that code runs out of javascript and not just jmol script editor
// A.S. 10.24.18 
//

function appendNewAtom(elementName, point) {
	assign atom ({0}) @elementName @point; //appends new atom, connected to a base atom in original structure 
	var bondNumber =  getProperty("modelInfo.models[1].bondCount");
	var bondNumberString  = "[{"+bondNumber+"}]";
	assign bond @bondNumberString "0"; //removes just-added bond--might have unintended consequences 
} 
// takes a given point and add the elements provided to it by a symmetry operation
// symmetry operations with multiple outputs (e.g. C3) will produce multiple symmetry atoms 





